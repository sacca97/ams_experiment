The commit changes code containing relevant methods/parameters: URI, InAppBrowser
The commit changes some relevant files: src/ios/CDVUIInAppBrowser.h, src/ios/CDVInAppBrowserOptions.m, src/ios/CDVWKInAppBrowser.m, src/ios/CDVUIInAppBrowser.m, src/ios/CDVWKInAppBrowser.h, src/ios/CDVInAppBrowserOptions.h, src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android, webview
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: GH-359
The commit message references some github issue: 359, 367
GH-359: Fix beforeload to work with POST requests (#367) ### Platforms affected iOS and Android ### What does this PR do? Fixes the behaviour of `beforeload` to resolve the problem with POST requests outlined in #359. The `beforeload` parameter has been changed from taking only a boolean (`yes` or not defined) to a discrete string with possible values of `get`, `post`, or `yes` which correspond to request types of GET, POST or GET&POST respectively. The `README.md` has been updated to reflect this. Note that use of `beforeload` to intercept POST requests is currently not supported on Android or iOS, so if `beforeload=yes` is specified and a POST request is detected as the HTTP request method, `beforeload` behaviour will not be applied. If `beforeload=post` is specified, a `loaderror` event will be dispatched which states that POST requests are not yet supported. #### Notes for Android The `shouldOverrideUrlLoading()` override method has been updated to support the [new method interface added in API 24 / Android 7][1] which receives the `WebResourceRequest` instead of just the `String url`, enabling the HTTP method of the request to be determined. The [deprecated method interface][2] has also been preserved for API <=23, but in this case the HTTP method cannot be determined so is passed as null. Also note that due to a [Chromium bug](https://bugs.chromium.org/p/chromium/issues/detail?id=155250),  `shouldOverrideUrlLoading()` is currently not called for POST requests. It's possible this may be resolved in a future Chromium version in the Android System Webview (given that this is now self-updating and independent of Android version since Android 5.0) - in prospective anticipation of this, code to handle POST requests has been added to `shouldOverrideUrlLoading()`. However, it seems more likely that this won't be resolved any time soon given that [a Chromium dev said](https://bugs.chromium.org/p/chromium/issues/detail?id=155250#c39):  > We're looking at implementing a better way to handle request interception in a future OS version. There's no way to just "fix" this, the API doesn't accommodate this usage at all. This will not be something you can use any time soon. Therefore if we want to go ahead and use `beforeload` to intercept request types other than GET, it's likely we'll instead need to use the `shouldInterceptRequest()` method override. As with `shouldOverrideUrlLoading()`, there are a two variants: the [new method interface][3] added in API 21 / Android 5.0 which  which receives the `WebResourceRequest` object and the [deprecated one][4] which receives only `String url`. If we want to determine the HTTP request method, we'll need to use the new implementation. This has been empirically tested and *is* called for POST requests so would allow the possibility to intercept, delay, modify and send the POST request and its data via `beforeload`. Both `shouldInterceptRequest()` method interfaces have been exposed in the Android implentation for potential future use but they currently do nothing other than return the unadulterated request object. ### What testing has been done on this change? Manual testing of POST and GET requests on both platforms using a test app container: https://github.com/dpa99c/cordova-plugin-inappbrowser-test [1]: https://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView,%20android.webkit.WebResourceRequest) [2]: https://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView,%20java.lang.String) [3]: https://developer.android.com/reference/android/webkit/WebViewClient.html#shouldInterceptRequest(android.webkit.WebView,%20android.webkit.WebResourceRequest) [4]: https://developer.android.com/reference/android/webkit/WebViewClient.html#shouldInterceptRequest(android.webkit.WebView,%20java.lang.String)
The commit changes code containing relevant methods/parameters: URI, gap-iab, JavaScript, InAppBrowser
The commit changes some relevant files: www/inappbrowser.js, src/ios/CDVWKInAppBrowser.m, src/ios/CDVUIInAppBrowser.m, src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android, webview
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: GH-3232
The commit message references some github issue: 362
(iOS & Android) Add postMessage API support (#362) <!-- Please make sure the checklist boxes are all checked before submitting the PR. The checklist is intended as a quick reference, for complete details please see our Contributor Guidelines: http://cordova.apache.org/contribute/contribute_guidelines.html Thanks! --> ### Platforms affected Android iOS (both UIWebView & WKWebView implementations) ### What does this PR do? Adds support for [postMessage API](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) enabling pages loaded into the InappBrowser to post messages back to the parent Webview of the Cordova app. For example, sending event messages associated with UI interactions such as button clicks from the wrapped page back to the parent app Webview. ### What testing has been done on this change? Automated tests have been extended to cover the `message` event. ### Checklist - [x ] Commit message follows the format: "GH-3232: (android) Fix bug with resolving file paths", where CB-xxxx is the JIRA ID & "android" is the platform affected. - [ x] Added automated test coverage as appropriate for this change.
The commit changes code containing relevant methods/parameters: URI, gap-iab, JavaScript, InAppBrowser
The commit changes some relevant files: src/ios/CDVInAppBrowser.h, src/ios/CDVUIInAppBrowser.h, src/ios/CDVInAppBrowserOptions.m, src/ios/CDVInAppBrowserNavigationController.m, src/ios/CDVUIInAppBrowser.m, src/ios/CDVWKInAppBrowser.m, src/ios/CDVWKInAppBrowserUIDelegate.m, src/ios/CDVWKInAppBrowser.h, src/ios/CDVInAppBrowser.m, src/ios/CDVInAppBrowserOptions.h, src/ios/CDVWKInAppBrowserUIDelegate.h, src/ios/CDVInAppBrowserNavigationController.h
The jira issue CB-7179 contains some security-related terms: inject, injection, security
The commit message and the advisory description contain the following keywords: webview
This commit has one or more twins.
The commit message references some jira issue: CB-7179
CB-7179 (iOS): Add support to optionally use WKWebView for iOS
The commit changes code containing relevant methods/parameters: InAppBrowser
The commit changes some relevant files: src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: CB-10795
The commit message references some github issue: 154
[CB-10795] Exclude current app from external intent list (#154) On Android, if the app defines an intent-filter for a given URL, and then tries to use inappbrowser to launch that URL via the _system target, the default handler for that intent is the app itself. That behavior can lead to circular loops, and ultimately is not what the developer wants -- the link should be launched in a browser. Because there is no easy way to find the "default" system browser on a device, this solution will do two things: 1) Check if the app is one of the targets for this intent 2) If so, create a custom chooser with all other targets, excluding the current app. If the app is not a target, then the current (existing) behavior is preserved. The only real "downside" to this approach is that a default handler can no longer be set for these URLs within the app, and a chooser will be shown each time the user taps a link that opens in a new browser. Fixes https://issues.apache.org/jira/browse/CB-10795
The commit changes code containing relevant methods/parameters: InAppBrowser
The commit changes some relevant files: src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android
An advisory keyword is contained in the changed files: android
The commit message references some github issue: 427
Fix beforeload for Android <= 7 (#427) * Fix beforeload for Android <= 7 * Change Android version check conditional
The commit changes code containing relevant methods/parameters: JavaScript, InAppBrowser
The commit changes some relevant files: src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android
An advisory keyword is contained in the changed files: android
The commit message references some github issue: 352
Added to support android devices with right to left direction languages (issue #352)
The commit changes code containing relevant methods/parameters: URI, InAppBrowser
The commit changes some relevant files: src/ios/CDVInAppBrowser.h, www/inappbrowser.js, src/ios/CDVInAppBrowser.m, src/android/InAppBrowser.java
The jira issue CB-14188 contains some security-related terms: inject
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: CB-14188
CB-14188: add beforeload event, catching navigation before it happens
The commit changes code containing relevant methods/parameters: InAppBrowser
The commit changes some relevant files: src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: CB-14061
CB-14061: (android) comply with RFC 3986 for custom URL scheme handling
The commit changes code containing relevant methods/parameters: InAppBrowser
The commit changes some relevant files: src/android/InAppBrowser.java
The commit message and the advisory description contain the following keywords: android
An advisory keyword is contained in the changed files: android
The commit message references some jira issue: CB-14048
CB-14048: (android) allowedSchemes check empty string fix
Fixes loadAfterBeforeload on iOS. Resolves #349. (#350) For both UIWebView and WKWebView implementations on iOS. <!-- Please make sure the checklist boxes are all checked before submitting the PR. The checklist is intended as a quick reference, for complete details please see our Contributor Guidelines: http://cordova.apache.org/contribute/contribute_guidelines.html Thanks! --> ### Platforms affected iOS ### What does this PR do? Fixes `beforeload` event (introduced by #276) for iOS ### What testing has been done on this change? Tested both allow & deny loading of URL with both iOS implementations in [test container app](https://github.com/dpa99c/cordova-plugin-inappbrowser-wkwebview-test) (ignore its README). - To test with UIWebView use options: `beforeload=yes,usewkwebview=no` - To test with WKWebView use options: `beforeload=yes,usewkwebview=yes` ### Checklist - [x] [Reported an issue](http://cordova.apache.org/contribute/issues.html) in the JIRA database - [x] Commit message follows the format: "CB-3232: (android) Fix bug with resolving file paths", where CB-xxxx is the JIRA ID & "android" is the platform affected. - [x] Added automated test coverage as appropriate for this change. closes #349
